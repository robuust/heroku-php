name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches: '*'

env:
  IMAGE_NAME: heroku-php

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU        
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx        
        uses: docker/setup-buildx-action@v3

      - name: Run tests
        run: |
          docker buildx build . --file Dockerfile --platform=linux/amd64,linux/arm64

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU        
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx        
        uses: docker/setup-buildx-action@v3

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build & push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker buildx build . --file Dockerfile --tag $IMAGE_ID:$VERSION --push --platform=linux/amd64,linux/arm64
